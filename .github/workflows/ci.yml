name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  quality:
    name: Quality
    if: "!contains(github.event.head_commit.message, 'chore(release):')"
    runs-on: ubuntu-18.04
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
      redis:
        image: redis
        ports:
          - 6379:6379
      localstack:
        image: localstack/localstack
        ports:
          - 4566:4566
        env:
          SERVICES: s3
        volumes:
          - ${{ github.workspace }}/aws:/docker-entrypoint-initaws.d
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Format
        run: npm run format:check

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3

      - name: Tests
        env:
          AWS_ACCESS_KEY_ID: dummy
          AWS_SECRET_ACCESS_KEY: dummy
        run: npm test

  release:
    name: Release
    needs: quality
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && !contains(github.event.head_commit.message, 'chore(release):')
    runs-on: ubuntu-18.04
    env:
      CACHE_IMAGE: sanofiiadc/whispr
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Log into Docker registry
        uses: azure/docker-login@v1
        with:
          username: ${{ secrets.SANOFI_DOCKER_HUB_USERNAME }}
          password: ${{ secrets.SANOFI_DOCKER_HUB_TOKEN }}

      - name: Pull Docker cache image
        run: docker pull --quiet ${CACHE_IMAGE} 2>/dev/null || true

      - name: Semantic Release
        env:
          MDF_BRANCH_TAG: latest
          MDF_BUILD_PARAMS: --cache-from ${{ env.CACHE_IMAGE }}
          GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        run: npx semantic-release
